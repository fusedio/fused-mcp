{"job_config":{"name":null,"steps":[{"type":"udf","name":null,"metadata":null,"ignore_chunk_error":false,"udf":{"name":"community_gardens_vancouver","type":"geopandas_v2","headers":[],"metadata":{"fused:mcp":{"description":"\n1) Purpose and Functionality:\nThe User Defined Function (UDF) 'community_gardens_vancouver' is designed to fetch and process geospatial data relating to community gardens and food trees in the city of Vancouver. It operates by sending a request to the Vancouver Open Data API and returns a GeoDataFrame containing the geographical coordinates and corresponding information relating to the specified city assets.\n\n2) Input Parameters:\nThe function doesn't require any input parameters from the user, as the parameters necessary for the API request ('limit') and URL are hard-coded within the function.\n\n3) Output:\nThe UDF returns a GeoDataFrame object containing spatial data obtained from the response of the API request. Specifically, the data includes geographical coordinates (as shapely geometry data) and other corresponding details about Vancouver's community gardens and food trees. A print statement within the function also provides the dimensions of the returned GeoDataFrame in the format (num_rows, num_columns).\n\n4) Technical Details and Limitations:\n- The function incorporates the use of the 'requests', 'geopandas' and 'shapely.geometry' Python libraries, which need to be installed and imported correctly for the UDF to operate.\n- It connects to the Vancouver Open Data API, hence requires a stable internet connection for successful data retrieval.\n- The 'limit' parameter for the API request is currently set to -1, the API's maximum data retrieval limit. Any changes to accommodate remote API updates may require adjustments to this parameter.\n- 'geom', a temporary column for storing raw geometry data, is deleted after use to optimize memory.\n- The function doesn't include any error handling capabilities, so it's not protected from potential issues such as unsuccessful API requests or changes in the data schema.\n\n5) Technical Style:\nThe UDF adheres to Python's coding standards and practices, presenting a clean, unambiguous syntax beneficial for AI systems and human coders alike. Despite its complexity, its operations are orderly and segmented, boosting understanding and potential for extension or modification.","parameters":[{"name":"","type":""}]},"fused:slug":"community_gardens_vancouver","fused:name":"community_gardens_vancouver"},"table_schema":null,"entrypoint":"community_gardens_vancouver","cache_max_age":null,"parameters":{},"original_headers":"","source":"community_gardens_vancouver.py"},"input":null}],"metadata":null}}